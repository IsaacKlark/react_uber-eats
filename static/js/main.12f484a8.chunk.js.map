{"version":3,"sources":["components/store/loadedData.js","components/store/storesMap.js","components/store/OriginalData.js","components/store/store.js","MainSection.js","header.js","footer.js","App.js","index.js"],"names":["LoadedDataReducer","loadedData","arguments","length","undefined","action","type","setStoresMap","storesMap","StoresMapReducer","getOriginalData","originalData","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","connect","state","_ref","restaurant","useLocation","pathname","split","join","selectedRestaurant","filter","card","title","imageURL","food","openedHeader","openedCategories","openedTime","etaRange","text","heroImageUrl","categories","categorie","foundedCategorie","i","includes","react_default","a","createElement","className","src","alt","map","index","array","react","key","Math","random","react_router_dom","to","concat","uuid","onClick","window","scrollTo","setStoreData","deboncedInput","f","timer","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","e","filteredData","toLowerCase","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","onChange","target","value","id","placeholder","Footer","androidLink","fillRule","clipRule","href","setDataToStore","getAllDataFromUrl","dispatch","URL","_ref2","objectUrl","arrayOfStoresMap","regenerator_default","async","_context","prev","next","fetch","then","data","json","awrap","Promise","all","sent","Object","slicedToArray","values","stop","useEffect","header","src_MainSection","footer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"8PAeeA,EAVW,WAA6B,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOJ,WAEhB,QACE,OAAOA,ICXAM,EAAe,SAAAC,GAAS,MAAK,CACxCF,KAAM,iBACNE,cAaaC,EAVU,WAA4B,IAA3BD,EAA2BN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACb,IAAK,iBACH,OAAOD,EAAOG,UAEhB,QACE,OAAOA,ICGEE,EATS,WAA+B,IAA9BC,EAA8BT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOM,aAChB,QACE,OAAOA,ICJPC,EAAcC,YAAgB,CAClCZ,WAAYD,EACZQ,UAAWC,EACXE,aAAcD,IAmBDI,EAFDC,YAAYH,EAAaI,YAAgBC,aC0GxCC,cARU,SAAAC,GAAK,MAAK,CACjCX,UAAWW,EAAMX,YAOJU,CA/HK,SAAAE,GAAmB,IAAhBZ,EAAgBY,EAAhBZ,UAEfa,EADWC,cACWC,SAASC,MAAM,KAAKC,KAAK,IAC/CC,EAAqBlB,EAAUmB,OAAO,SAAAC,GAAI,OAC9CA,EAAKC,QAAUR,IAGbS,EAAW,GACXC,EAAOvB,EACPwB,EAAe,GACfC,EAAmB,GACnBC,EAAa,GAuBjB,OArBIR,EAAmB,KACrBQ,EAAaR,EAAmB,GAAGS,SAASC,KAC5CN,EAAWJ,EAAmB,GAAGW,aACjCL,EAAeN,EAAmB,GAAGG,MAAML,MAAM,KAAKC,KAAvC,QACfQ,EAAmBP,EAAmB,GAAGY,WACzCP,EAAOvB,EAAUmB,OAAO,SAACY,GAGvB,IAFA,IAAIC,EAAmB,KAEdC,EAAI,EAAGA,EAAIF,EAAUD,WAAWnC,OAAQsC,GAAK,EAElDf,EAAmB,GAChBY,WAAWI,SAASH,EAAUD,WAAWG,MAE5CD,EAAmBD,GAIvB,OAAOC,KAKTG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,OACEE,IAAKjB,EACLkB,IAAI,kBACJF,UAAyC,IAA9BpB,EAAmBvB,OAC1B,YAAc,uBAGpBwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZd,EACDW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAEVb,EAAiBgB,IAAI,SAACV,EAAWW,EAAOC,GAAnB,OACnBR,EAAAC,EAAAC,cAACO,EAAA,SAAD,CAAUC,IAAqB,IAAhBC,KAAKC,UAClBZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXP,EAEDI,EAAAC,EAAAC,cAAA,QACEC,UACGI,IAAUC,EAAMhD,OAAS,EAAK,YAAc,QAFjD,gBAaZwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZZ,KAKPS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEXf,EAAKkB,IAAI,SAAArB,GAAI,OACXe,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,GAAE,IAAAC,OAAM9B,EAAKC,OACbiB,UAAU,OACVO,IAAKzB,EAAK+B,KACVC,QAAS,WACPC,OAAOC,SAAS,EAAG,KAGrBnB,EAAAC,EAAAC,cAAA,OAAKG,IAAI,OAAOD,IAAKnB,EAAKS,aAAcS,UAAU,cAClDH,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAChBlB,EAAKC,OAERc,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEVlB,EAAKU,WAAWW,IAAI,SAACV,EAAWW,EAAOC,GAAnB,OAClBR,EAAAC,EAAAC,cAACO,EAAA,SAAD,CAAUC,IAAqB,IAAhBC,KAAKC,UAClBZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXP,EAEDI,EAAAC,EAAAC,cAAA,QACEC,UACGI,IAAUC,EAAMhD,OAAS,EAAK,YAAc,QAFjD,eAYVwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZlB,EAAKO,SAASC,aC4IzB2B,EAAe,CACnBxD,aAAcC,GAQDU,cAbM,SAAAC,GAAK,MAAK,CAC7BR,aAAcQ,EAAMR,eAYeoD,EAAtB7C,CAjQA,SAAAE,GAAoC,IAAjCT,EAAiCS,EAAjCT,aAAcJ,EAAmBa,EAAnBb,aAyDxByD,EAlBW,SAACC,GAChB,IAAIC,EAAQ,GAEZ,OAAO,WAAa,QAAAC,EAAAjE,UAAAC,OAATiE,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAApE,UAAAoE,GAClBC,aAAaL,GACbA,EAAQM,WAAW,kBAAMP,EAACQ,WAAD,EAAKL,IAAO,MAanBM,CATJ,SAACC,GACjB,IAAMC,EAAejE,EAAagB,OAAO,SAAAN,GAAU,OACjDA,EAAWQ,MAAMgD,cAAcnC,SAASiC,EAAEE,gBACvCxD,EAAWiB,WAAWb,KAAK,IAAIoD,cAAcnC,SAASiC,EAAEE,iBAG7DtE,EAAaqE,KAKf,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,s6EA0CFF,KAAK,aAITtC,EAAAC,EAAAC,cAAA,OACEiC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QAAMsC,EA7HD,8jEA6HcF,KAAK,eAK9BtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,wrBAeFF,KAAK,WAzBX,WAgCFtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,g6BAmBFF,KAAK,UAEPtC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,6EAEFF,KAAK,WAlCX,iBA0CJtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OACEiC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,sMAIFC,OAAO,QACPC,YAAY,OAGhB1C,EAAAC,EAAAC,cAAA,SACEyC,SAAU,SAAAX,GAAC,OAAIX,EAAcW,EAAEY,OAAOC,QACtCC,GAAG,QACHnF,KAAK,OACLwC,UAAU,uBACV4C,YAAY,YAGhB/C,EAAAC,EAAAC,cAAA,yBCuRK8C,EApgBA,WACb,IAgBMC,EAAc,yOAyCpB,OACEjD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OACEiC,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,62EAmDFF,KAAK,UAEPtC,EAAAC,EAAAC,cAAA,QAAMsC,EAvGD,4iEAuGcF,KAAK,aAG1BtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEiC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEgD,SAAS,UACTC,SAAS,UACTX,EAAE,y4FA4DFF,KAAK,WAITtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAChBH,EAAAC,EAAAC,cAAA,yBAGAF,EAAAC,EAAAC,cAAA,2BAGAF,EAAAC,EAAAC,cAAA,4BAMNF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,KACEkD,KAAMH,EACN9C,UAAU,wBAFZ,KAMAH,EAAAC,EAAAC,cAAA,KACEkD,KAAMH,EACN9C,UAAU,0BAFZ,OAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGkD,KA9NW,wFA8NcjD,UAAU,gBAAtC,oBAIFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,uCACLjD,UAAU,gBAFZ,kBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAxOc,sGAyOdjD,UAAU,gBAFZ,uBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,mDACLjD,UAAU,gBAFZ,0BAUNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KA/PM,0FAgQNjD,UAAU,gBAFZ,aAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KA3QM,2FA4QNjD,UAAU,gBAFZ,cAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,4CACLjD,UAAU,gBAFZ,oBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,sDACLjD,UAAU,gBAFZ,wBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAzSO,qUA0SPjD,UAAU,gBAEVH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,wnDAoCFF,KAAK,UAEPtC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,m2BAoBFF,KAAK,WAxEX,eAiFRtC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,oCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,iCACLjD,UAAU,oCAFZ,mBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KAAK,iCACLjD,UAAU,oCAFZ,iBAOFH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEkD,KApZM,6HAqZNjD,UAAU,oCAFZ,aAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,gcAUFF,KAAK,WAITtC,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,i5BAkBFF,KAAK,WAGTtC,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVgC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAENvC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,ocASFF,KAAK,UAEPtC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,gaAOFF,KAAK,UAEPtC,EAAAC,EAAAC,cAAA,QACEsC,EAAE,2YAOFF,KAAK,gBC9dfe,EAAiB,CACrBC,kBJjB+B,kBAAM,SAAMC,GAAN,IAAAC,EAAA/E,EAAAgF,EAAAC,EAAAC,EAAA,OAAAC,EAAA3D,EAAA4D,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC/BR,EAAMS,MACV,+DACAC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAHiBN,EAAAE,KAAA,EAAAJ,EAAA3D,EAAAoE,MAIXC,QAAQC,IAAI,CAACf,KAJF,OAAA/E,EAAAqF,EAAAU,KAAAf,EAAAgB,OAAAC,EAAA,EAAAD,CAAAhG,EAAA,GAI9BiF,EAJ8BD,EAAA,GAMrCF,EHlB0C,CAC1C5F,KAAM,gBACNL,WGgBuBoG,IAEjBC,EAAmBc,OAAOE,OAAOjB,EAAUS,KAAKtG,WAEtD0F,EAAS3F,EAAa+F,IACtBJ,EDvB8C,CAC9C5F,KAAM,gBACNK,aCqByB2F,IAXY,yBAAAG,EAAAc,aIwBxBrG,cAZU,SAAAC,GAAK,MAAK,IAYM6E,EAA1B9E,CA1BH,SAAAE,GAA2B,IAAxB6E,EAAwB7E,EAAxB6E,kBAKb,OAJAuB,oBAAU,WACRvB,KACC,IAGDtD,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,SCbNC,IAASC,OACPlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAUhH,MAAOA,GAAO6B,EAAAC,EAAAC,cAACkF,EAAD,OACxBC,SAASC,eAAe","file":"static/js/main.12f484a8.chunk.js","sourcesContent":["export const setLoadedData = loadedData => ({\n  type: 'URL_IS_LOADED',\n  loadedData,\n});\n\nconst LoadedDataReducer = (loadedData = [], action) => {\n  switch (action.type) {\n    case 'URL_IS_LOADED':\n      return action.loadedData;\n\n    default:\n      return loadedData;\n  }\n};\n\nexport default LoadedDataReducer;\n","export const setStoresMap = storesMap => ({\n  type: 'GET_STORES_MAP',\n  storesMap,\n});\n\nconst StoresMapReducer = (storesMap = [], action) => {\n  switch (action.type) {\n    case 'GET_STORES_MAP':\n      return action.storesMap;\n\n    default:\n      return storesMap;\n  }\n};\n\nexport default StoresMapReducer;\n","export const setOriginalData = originalData => ({\n  type: 'ORIGINAL_DATA',\n  originalData,\n});\n\nconst getOriginalData = (originalData = [], action) => {\n  switch (action.type) {\n    case 'ORIGINAL_DATA':\n      return action.originalData;\n    default:\n      return originalData;\n  }\n};\n\nexport default getOriginalData;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport LoadedDataReducer, { setLoadedData } from './loadedData';\nimport StoresMapReducer, { setStoresMap } from './storesMap';\nimport getOriginalData, { setOriginalData } from './OriginalData';\n\nconst rootReducer = combineReducers({\n  loadedData: LoadedDataReducer,\n  storesMap: StoresMapReducer,\n  originalData: getOriginalData,\n});\n\nexport const getAllDataFromUrl = () => async(dispatch) => {\n  const URL = fetch(\n    'https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants'\n  ).then(data => data.json());\n  const [objectUrl] = await Promise.all([URL]);\n\n  dispatch(setLoadedData(objectUrl));\n\n  const arrayOfStoresMap = Object.values(objectUrl.data.storesMap);\n\n  dispatch(setStoresMap(arrayOfStoresMap));\n  dispatch(setOriginalData(arrayOfStoresMap));\n};\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MainSection = ({ storesMap }) => {\n  const location = useLocation();\n  const restaurant = location.pathname.split('/').join('');\n  const selectedRestaurant = storesMap.filter(card => (\n    card.title === restaurant\n  ));\n\n  let imageURL = '';\n  let food = storesMap;\n  let openedHeader = '';\n  let openedCategories = [];\n  let openedTime = '';\n\n  if (selectedRestaurant[0]) {\n    openedTime = selectedRestaurant[0].etaRange.text;\n    imageURL = selectedRestaurant[0].heroImageUrl;\n    openedHeader = selectedRestaurant[0].title.split(' ').join(`\\u00A0`);\n    openedCategories = selectedRestaurant[0].categories;\n    food = storesMap.filter((categorie) => {\n      let foundedCategorie = null;\n\n      for (let i = 1; i < categorie.categories.length; i += 1) {\n        if (\n          selectedRestaurant[0]\n            .categories.includes(categorie.categories[i])\n        ) {\n          foundedCategorie = categorie;\n        }\n      }\n\n      return foundedCategorie;\n    });\n  }\n\n  return (\n    <div className=\"main\">\n      <section className=\"card-opened\">\n        <img\n          src={imageURL}\n          alt=\"restaurant info\"\n          className={selectedRestaurant.length === 0\n            ? 'noDisplay' : 'selectedRestaurant'}\n        />\n\n        <div className=\"card__opened-info\">\n          <div className=\"opened__header\">\n            {openedHeader}\n            <ul className=\"card__ul opened__ul\">\n              {\n                openedCategories.map((categorie, index, array) => (\n                  <Fragment key={Math.random() * 100}>\n                    <li className=\"card__li\">\n                      {categorie}\n\n                      <span\n                        className={\n                          (index === array.length - 1) ? 'bull-none' : 'bull'\n                        }\n                      >\n                          &bull;\n                      </span>\n                    </li>\n                  </Fragment>\n                ))\n              }\n            </ul>\n          </div>\n          <div className=\"card__time opened__time\">\n            {openedTime}\n          </div>\n        </div>\n      </section>\n\n      <div className=\"cards\">\n        {\n          food.map(card => (\n            <Link\n              to={`/${card.title}`}\n              className=\"card\"\n              key={card.uuid}\n              onClick={() => {\n                window.scrollTo(0, 0);\n              }}\n            >\n              <img alt=\"dish\" src={card.heroImageUrl} className=\"card__img\" />\n              <section className=\"card__title\">\n                {card.title}\n              </section>\n              <ul className=\"card__ul\">\n                {\n                  card.categories.map((categorie, index, array) => (\n                    <Fragment key={Math.random() * 100}>\n                      <li className=\"card__li\">\n                        {categorie}\n\n                        <span\n                          className={\n                            (index === array.length - 1) ? 'bull-none' : 'bull'\n                          }\n                        >\n                          &bull;\n                        </span>\n                      </li>\n                    </Fragment>\n                  ))\n                }\n              </ul>\n              <div className=\"card__time\">\n                {card.etaRange.text}\n              </div>\n            </Link>\n          ))\n        }\n      </div>\n\n    </div>\n  );\n};\n\nconst getDataFromStore = state => ({\n  storesMap: state.storesMap,\n});\n\nMainSection.propTypes = {\n  storesMap: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default connect(getDataFromStore)(MainSection);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as storesMap from './components/store/storesMap';\n\nconst Header = ({ originalData, setStoresMap }) => {\n  const wordEats = 'M0.2578120.491821H16.3378V4.42625H4'\n  + '.60141V10.0131H16.0112V13.8138H4.60141V19.4951H16'\n  + '.3378V23.4295H0.257812V0.491821ZM60.7457 23.8426C65.6755 '\n  + '23.8426 68.4532 21.482 68.4532 18.24C68.4532 15.9305 '\n  + '66.8086 14.2072 63.366 13.4597L59.7267 12.7161C57.6139 '\n  + '12.3226 56.949 11.9292 56.949 11.1423C56.949 10.1233 '\n  + '57.968 9.49772 59.8447 9.49772C61.8788 9.49772 63.3857 '\n  + '10.0446 63.7791 11.9253H68.044C67.8119 8.38428 65.2663 '\n  + '6.04723 60.1044 6.04723C55.6427 6.04723 52.5109 7.88854 '\n  + '52.5109 11.4571C52.5109 13.924 54.2342 15.5292 57.9522 '\n  + '16.3121L62.0204 17.2525C63.6257 17.5672 64.0545 18 64.0545 '\n  + '18.6649C64.0545 19.7233 62.8427 20.3882 60.8834 '\n  + '20.3882C58.4204 20.3882 57.0119 19.8413 56.465 '\n  + '17.9607H52.1765C52.8021 21.4938 55.4224 23.8426 60.7457 '\n  + '23.8426ZM50.9372 23.4138H46.3221C43.4263 23.4138 41.8211 '\n  + '21.6118 41.8211 19.3377V10.3279H38.5752V6.48789H41.8368V1'\n  + '.66822H46.1254V6.48789H50.9372V10.3279H46.1254V18.24C46.1254 '\n  + '19.141 46.7509 19.5738 47.7306 19.5738H50.9372V23.4138ZM32.4454 '\n  + '6.49576V8.02231C30.9354 6.74593 29.0205 6.04859 27.0434 '\n  + '6.0551C25.8597 6.0302 24.6829 6.24184 23.5821 6.67761C22.4813 '\n  + '7.11338 21.4785 7.76451 20.6326 8.59284C19.7866 9.42117 19.1146 '\n  + '10.41 18.6557 11.5015C18.1969 12.5929 17.9606 13.7649 17.9606 '\n  + '14.9489C17.9606 16.1328 18.1969 17.3049 18.6557 18.3963C19.1146 '\n  + '19.4877 19.7866 20.4766 20.6326 21.3049C21.4785 22.1332 22.4813 '\n  + '22.7844 23.5821 23.2201C24.6829 23.6559 25.8597 23.8675 27.0434 '\n  + '23.8426C29.0209 23.8512 30.9365 23.1536 32.4454 21.8754V23.'\n  + '4059H36.7221V6.48789L32.4454 6.49576ZM27.3975 20.1285C26.3716 '\n  + '20.1402 25.3654 19.8467 24.5068 19.2852C23.6481 18.7237 22.9758 '\n  + '17.9195 22.5753 16.975C22.1747 16.0305 22.0641 14.9882 22.2573 '\n  + '13.9806C22.4505 12.9731 22.939 12.0457 23.6605 11.3163C24.3821 '\n  + '10.587 25.3042 10.0887 26.3096 9.88467C27.3151 9.68065 28.3585 '\n  + '9.78017 29.3072 10.1706C30.256 10.561 31.0673 11.2246 31.6379 '\n  + '12.0772C32.2086 12.9298 32.5129 13.9328 32.5122 14.9587C32.5185 '\n  + '15.635 32.3905 16.3058 32.1358 16.9324C31.8811 17.5589 31.5046 '\n  + '18.1287 31.0282 18.6087C30.5518 19.0888 29.9849 19.4696 29.3603 '\n  + '19.7291C28.7358 19.9887 28.0659 20.1217 '\n  + '27.3896 20.1207L27.3975 20.1285Z';\n\n  const debounce = (f) => {\n    let timer = '';\n\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => f(...args), 1000);\n    };\n  };\n\n  const inputText = (e) => {\n    const filteredData = originalData.filter(restaurant => (\n      restaurant.title.toLowerCase().includes(e.toLowerCase())\n      || restaurant.categories.join('').toLowerCase().includes(e.toLowerCase())\n    ));\n\n    setStoresMap(filteredData);\n  };\n\n  const deboncedInput = debounce(inputText);\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav__items\">\n        <div className=\"nav__items-side\">\n          <div className=\"uberEats\">\n            <svg\n              className=\"nav__uber\"\n              width=\"70\"\n              height=\"24\"\n              viewBox=\"0 0 70 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M67.713 9.66297C65.5609 9.66297 64.0343 11.3469\n      64.0343 13.9318V23.4138H60.7491V6.72395H63.995V8.76198C64.3953\n      8.0865 64.9691 7.53039 65.6567 7.15129C66.3444 6.77219 67.1209\n      6.5839 67.9058 6.60592H69.0861V9.66297H67.713ZM58.4789\n      15.0689C58.4789 10.0918 54.9379 6.36985 50.1458 6.36985C49.0135\n      6.37754 47.894 6.60903 46.8515 7.05101C45.809 7.49299 44.8643\n      8.13673 44.0715 8.9452C43.2788 9.75367 42.6537 10.7109 42.2323\n      11.7618C41.8109 12.8128 41.6014 13.9367 41.616 15.0689C41.616\n      20.042 45.452 23.8033 50.4566 23.8033C51.8546 23.8297 53.2384\n      23.5197 54.4914 22.8993C55.7445 22.2789 56.83 21.3664 57.6566\n      20.2387L55.2724 18.4918C54.7253 19.2553 54.0016 19.8749 53.1629\n      20.2976C52.3243 20.7204 51.3957 20.9337 50.4566 20.9194C49.1191\n      20.9131 47.8282 20.4278 46.8177 19.5516C45.8072 18.6753 45.144\n      17.4661 44.9484 16.143H58.4868L58.4789 15.0689ZM45.0192\n      13.5384C45.6055 10.9928 47.6396 9.26953 50.1064 9.26953C52.5733\n      9.26953 54.6035 10.9928 55.1543 13.5384H45.0192ZM31.2094\n      6.36985C30.1115 6.37078 29.0247 6.58926 28.0117 7.01268C26.9987\n      7.4361 26.0797 8.05606 25.3078\n      8.83674V0.491821H22.0225V23.4138H25.2684V21.2971C26.8409\n      22.8878 28.9805 23.7892 31.2173 23.8033C32.3775 23.8279\n      33.5311 23.6207 34.6102 23.1937C35.6894 22.7667 36.6724\n      22.1286 37.5017 21.3168C38.331 20.5049 38.9898 19.5356\n      39.4397 18.4658C39.8895 17.396 40.1212 16.2471 40.1212\n      15.0866C40.1212 13.926 39.8895 12.7772 39.4397 11.7073C38.9898\n      10.6375 38.331 9.66826 37.5017 8.8564C36.6724 8.04453 35.6894\n      7.4064 34.6102 6.97942C33.5311 6.55244 32.3775 6.3452 31.2173\n      6.36985H31.2094ZM30.9733 20.8682C29.8282 20.8737 28.7073 20.5388\n      27.7528 19.9062C26.7983 19.2736 26.0532 18.3717 25.6121\n      17.3149C25.171 16.2582 25.0538 15.0942 25.2753 13.9707C25.4968\n      12.8472 26.047 11.8148 26.8562 11.0046C27.6654 10.1943 28.697\n      9.64264 29.8202 9.41961C30.9434 9.19659 32.1075 9.31224 33.1648\n      9.75189C34.2222 10.1915 35.1251 10.9354 35.7591 11.889C36.393\n      12.8426 36.7294 13.9631 36.7255 15.1082C36.7265 15.8635 36.5784\n      16.6116 36.2896 17.3095C36.0008 18.0074 35.577 18.6414 35.0425\n      19.1751C34.5081 19.7088 33.8735 20.1318 33.1752 20.4196C32.4769\n      20.7074 31.7286 20.8545 30.9733 20.8525V20.8682ZM9.92415\n      20.7108C13.0953 20.7108 15.5583 18.2794 15.5583\n      14.6361V0.491821H18.9615V23.4138H15.5976V21.2459C14.8117\n      22.0582 13.8691 22.7026 12.827 23.1401C11.7849 23.5777\n      10.6649 23.7992 9.53465 23.7915C4.64415 23.7915 0.878906\n      20.2269 0.878906 14.821V0.491821H4.34514V14.6558C4.34514\n      18.3187 6.70579 20.7108 9.92415 20.7108Z\"\n                fill=\"#262626\"\n              />\n            </svg>\n\n            <svg\n              width=\"69\"\n              height=\"24\"\n              viewBox=\"0 0 69 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d={wordEats} fill=\"#5FB709\" />\n            </svg>\n          </div>\n        </div>\n\n        <div className=\"nav__items\">\n          <span className=\"nav__text\">\n            <svg\n              className=\"nav__location\"\n              width=\"20\"\n              height=\"24\"\n              viewBox=\"0 0 20 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M9.99184 24C9.99184 24 0 15.5265 0 9.99184C0\n            4.48163 4.45714 0 9.99184 0C15.5265 0 19.9837\n            4.48163 19.9837 9.99184C19.9837 15.5265 9.99184\n            24 9.99184 24ZM9.99184 2.00816C5.58367 2.00816\n            1.98367 5.58367 1.98367 10.0163C1.98367 14.4245\n            9.99184 21.0122 9.99184 21.0122C9.99184 21.0122\n            18 14.4245 18 10.0163C18 5.58367 14.4 2.00816\n            9.99184 2.00816ZM9.99184 14.0082C7.78776 14.0082\n            6 12.2204 6 10.0163C6 7.81225 7.78776 6 9.99184\n            6C12.1959 6 13.9837 7.78776 13.9837 9.99184C13.9837\n            12.1959 12.1959 14.0082 9.99184 14.0082ZM9.99184\n            8.00816C8.8898 8.00816 7.98367 8.91429 7.98367\n            10.0163C7.98367 11.1184 8.8898 12 9.99184 12C11.0939\n            12 12 11.0939 12 9.99184C12 8.8898 11.0939 8.00816\n            9.99184 8.00816Z\"\n                fill=\"black\"\n              />\n            </svg>\n          London\n          </span>\n        </div>\n\n        <div className=\"nav__items\">\n          <span className=\"nav__text\">\n            <svg\n              className=\"nav__clock\"\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 22 22\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11 0C8.82441 0 6.69767 0.645139 4.88873\n          1.85383C3.07979 3.06253 1.66989 4.78049 0.83733\n          6.79048C0.00476614 8.80047 -0.21307 11.0122 0.211367\n          13.146C0.635804 15.2798 1.68345 17.2398 3.22183\n          18.7782C4.76021 20.3165 6.72022 21.3642 8.85401\n          21.7886C10.9878 22.2131 13.1995 21.9952 15.2095\n          21.1627C17.2195 20.3301 18.9375 18.9202 20.1462\n          17.1113C21.3549 15.3023 22 13.1756 22 11C22 8.08262\n          20.8411 5.28472 18.7782 3.22182C16.7153 1.15892\n          13.9174 0 11 0V0ZM11 20.1667C9.18701 20.1667 7.41473\n          19.629 5.90728 18.6218C4.39983 17.6146 3.22491 16.1829\n          2.53111 14.5079C1.83731 12.8329 1.65577 10.9898 2.00947\n          9.21167C2.36317 7.43351 3.23621 5.80017 4.51819\n          4.51819C5.80017 3.23621 7.43352 2.36317 9.21167\n          2.00947C10.9898 1.65577 12.8329 1.8373 14.5079\n          2.5311C16.1829 3.22491 17.6146 4.39982 18.6218\n          5.90727C19.629 7.41472 20.1667 9.187 20.1667\n          11C20.164 13.4303 19.1974 15.7604 17.4789\n          17.4789C15.7604 19.1974 13.4303 20.164 11 20.1667Z\"\n                fill=\"black\"\n              />\n              <path\n                d=\"M11.9173\n          3.66663H10.084V10.0833V11V11.9166H15.584V10.0833H11.9173V3.66663Z\"\n                fill=\"black\"\n              />\n            </svg>\n\n          Deliver now\n          </span>\n        </div>\n      </div>\n      <div className=\"nav__items\">\n        <div className=\"nav__items-side\">\n          <div className=\"nav__search\">\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10.9217 11.0417L15 15M12.8788 6.76471C12.8788\n            9.94847 10.2196 12.5294 6.93939 12.5294C3.65916 12.5294\n            1 9.94847 1 6.76471C1 3.58095 3.65916 1 6.93939 1C10.2196\n            1 12.8788 3.58095 12.8788 6.76471Z\"\n                stroke=\"black\"\n                strokeWidth=\"2\"\n              />\n            </svg>\n            <input\n              onChange={e => deboncedInput(e.target.value)}\n              id=\"input\"\n              type=\"text\"\n              className=\"nav__text nav__input\"\n              placeholder=\"search\"\n            />\n          </div>\n          <p>\n            Sign in\n          </p>\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst getStoreData = state => ({\n  originalData: state.originalData,\n});\n\nconst setStoreData = {\n  setStoresMap: storesMap.setStoresMap,\n};\n\nHeader.propTypes = {\n  originalData: PropTypes.arrayOf(PropTypes.any).isRequired,\n  setStoresMap: PropTypes.func.isRequired,\n};\n\nexport default connect(getStoreData, setStoreData)(Header);\n","import React from 'react';\n\nconst Footer = () => {\n  const pricingLink = 'https://help.uber.com/riders/article/цены-в-ube'\n  + 'reats-?nodeId=a3e4363b-761f-4acd-a555-1eff290f5ee6';\n  const languageLink = 'https://www.ubereats.com/en-UA/feed/?mod=sele'\n  + 'ctLanguage&pl=JTdCJTIyYWRkcmVzcyUyMiUzQSUyMkt5aXYlMjIlMkMlMjJyZWZ'\n  + 'lcmVuY2UlMjIlM0ElMjJDaElKQlVWYTRVN1AxRUFSX2tZQkY5SXhTWFklMjIlMkMlM'\n  + 'jJyZWZlcmVuY2VUeXBlJTIyJTNBJTIyZ29vZ2xlX3BsYWNlcyUyMiUyQyUyMmxhdGl0'\n  + 'dWRlJTIyJTNBNTAuNDQ5ODU4NyUyQyUyMmxvbmdpdHVkZSUyMiUzQTMwLjUyMzY0OTY'\n  + 'lN0Q%3D&ps=1';\n  const readFAQLink = 'https://about.ubereats.com/faq/?_ga=2.68158550'\n  + '.692843576.1579427116-686431288.1578922435';\n  const aboutUberEatsLink = 'https://about.ubereats.com/'\n  + '?_ga=2.102302406.692843576.1579427116-686431288.1578922435';\n  const getHelpLink = 'https://help.uber.com/ubereats?_ga=2.64892008'\n  + '.692843576.1579427116-686431288.1578922435';\n  const signUpToDeliverLink = 'https://www.uber.com/ua/ru/drive/delivery'\n  + '/?_ga=2.61329387.692843576.1579427116-686431288.1578922435';\n  const androidLink = 'https://play.google.com/store/apps/details?'\n  + 'id=com.ubercab.eats&referrer=mat_click_id%3Dfb107c03370c43788'\n  + 'c68bb3095938515-20200119-7336%26link_click_id%3D7473835205986594'\n  + '35&mat_click_id=fb107c03370c43788c68bb3095938515-20200119-7336';\n  const wordEats = 'M76.3789 0H92.4589V3.93443H80.7225V9'\n  + '.52131H92.1323V13.322H80.7225V19.0033H92.4589V22.9377H76.'\n  + '3789V0ZM136.867 23.3508C141.797 23.3508 144.574 20.9902 '\n  + '144.574 17.7482C144.574 15.4387 142.93 13.7154 139.487 '\n  + '12.9679L135.848 12.2243C133.735 11.8308 133.07 11.4374 '\n  + '133.07 10.6505C133.07 9.63148 134.089 9.0059 135.966 '\n  + '9.0059C138 9.0059 139.507 9.55279 139.9 11.4334H144'\n  + '.165C143.933 7.89246 141.387 5.55541 136.225 5.55541C131'\n  + '.764 5.55541 128.632 7.39672 128.632 10.9652C128.632 13.4321 '\n  + '130.355 15.0374 134.073 15.8203L138.142 16.7607C139.747 '\n  + '17.0754 140.176 17.5082 140.176 18.1731C140.176 19.2315 '\n  + '138.964 19.8964 137.004 19.8964C134.542 19.8964 133.133 '\n  + '19.3495 132.586 17.4689H128.298C128.923 21.002 131.543 '\n  + '23.3508 136.867 23.3508ZM127.058 22.922H122.443C119.547 '\n  + '22.922 117.942 21.12 117.942 18.8459V9.83607H114.696V5'\n  + '.99606H117.958V1.17639H122.246V5.99606H127.058V9.83607H122'\n  + '.246V17.7482C122.246 18.6492 122.872 19.082 123.852 19.082H127'\n  + '.058V22.922ZM108.566 6.00394V7.53049C107.057 6.25411 105.142 '\n  + '5.55677 103.164 5.56328C101.981 5.53838 100.804 5.75002 99.7032 '\n  + '6.18579C98.6024 6.62156 97.5996 7.27269 96.7537 8.10102C95.9077 '\n  + '8.92935 95.2357 9.91821 94.7768 11.0096C94.318 12.1011 94.0817 '\n  + '13.2731 94.0817 14.4571C94.0817 15.641 94.318 16.813 94.7768 '\n  + '17.9045C95.2357 18.9959 95.9077 19.9848 96.7537 20.8131C97.5996 '\n  + '21.6414 98.6024 22.2925 99.7032 22.7283C100.804 23.1641 101.981 '\n  + '23.3757 103.164 23.3508C105.142 23.3594 107.058 22.6618 108.566 '\n  + '21.3836V22.9141H112.843V5.99606L108.566 6.00394ZM103.519 '\n  + '19.6367C102.493 19.6484 101.487 19.3549 100.628 18.7933C99'\n  + '.7692 18.2318 99.0969 17.4277 98.6964 16.4832C98.2958 15.5387 '\n  + '98.1852 14.4964 98.3784 13.4888C98.5716 12.4812 99.0601 11.5539 '\n  + '99.7816 10.8245C100.503 10.0952 101.425 9.59686 102.431 '\n  + '9.39285C103.436 9.18883 104.48 9.28834 105.428 9.67875C106.377 '\n  + '10.0691 107.188 10.7328 107.759 11.5854C108.33 12.438 108.634 '\n  + '13.4409 108.633 14.4669C108.64 15.1432 108.512 15.814 108.257 '\n  + '16.4405C108.002 17.0671 107.626 17.6369 107.149 18.1169C106.673 '\n  + '18.597 106.106 18.9778 105.481 19.2373C104.857 19.4968 104.187 '\n  + '19.6299 103.511 19.6289L103.519 19.6367Z';\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__top\">\n        <div className=\"footer__block1\">\n          <div className=\"footer__left-up\">\n            <svg\n              width=\"145\"\n              height=\"24\"\n              viewBox=\"0 0 145 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M66.8341 9.17115C64.682 9.17115\n          63.1554 10.8551 63.1554\n          13.44V22.922H59.8702V6.23213H63.1161V8.27016C63.5164\n          7.59468 64.0902 7.03857 64.7778 6.65947C65.4655 6.28037\n          66.242 6.09207 67.0269 6.1141H68.2072V9.17115H66.8341ZM57.6\n          14.5771C57.6 9.6 54.059 5.87803 49.2669 5.87803C48.1346\n          5.88572 47.0151 6.11721 45.9726 6.55919C44.9301 7.00117\n          43.9854 7.64491 43.1926 8.45338C42.3999 9.26185 41.7748\n          10.2191 41.3534 11.27C40.932 12.321 40.7225 13.4449\n          40.737 14.5771C40.737 19.5502 44.5731 23.3115 49.5777\n          23.3115C50.9757 23.3379 52.3595 23.0278 53.6125\n          22.4075C54.8656 21.7871 55.9511 20.8746 56.7777\n          19.7469L54.3934 18C53.8464 18.7634 53.1227 19.383\n          52.284 19.8058C51.4453 20.2285 50.5168 20.4419\n          49.5777 20.4275C48.2402 20.4212 46.9493 19.936\n          45.9388 19.0597C44.9283 18.1835 44.2651 16.9743\n          44.0695 15.6511H57.6079L57.6 14.5771ZM44.1403\n          13.0466C44.7266 10.501 46.7607 8.7777 49.2275\n          8.7777C51.6944 8.7777 53.7246 10.501 54.2754\n          13.0466H44.1403ZM30.3305 5.87803C29.2326 5.87896\n          28.1458 6.09744 27.1328 6.52086C26.1198 6.94428\n          25.2008 7.56424 24.4289\n          8.34492V0H21.1436V22.922H24.3895V20.8052C25.962\n          22.396 28.1016 23.2974 30.3384 23.3115C31.4986\n          23.3361 32.6522 23.1289 33.7313 22.7019C34.8104\n          22.2749 35.7935 21.6368 36.6228 20.8249C37.4521\n          20.0131 38.1109 19.0438 38.5607 17.974C39.0106\n          16.9042 39.2423 15.7553 39.2423 14.5948C39.2423\n          13.4342 39.0106 12.2854 38.5607 11.2155C38.1109\n          10.1457 37.4521 9.17644 36.6228 8.36458C35.7935\n          7.55271 34.8104 6.91458 33.7313 6.4876C32.6522\n          6.06062 31.4986 5.85338 30.3384 5.87803H30.3305ZM30.0944\n          20.3764C28.9493 20.3818 27.8284 20.047 26.8739\n          19.4144C25.9194 18.7818 25.1743 17.8798 24.7332\n          16.8231C24.2921 15.7663 24.1749 14.6024 24.3964\n          13.4789C24.6179 12.3554 25.1681 11.323 25.9773\n          10.5127C26.7864 9.70246 27.8181 9.15082 28.9413\n          8.92779C30.0644 8.70477 31.2286 8.82042 32.2859\n          9.26007C33.3433 9.69972 34.2462 10.4435 34.8801\n          11.3972C35.5141 12.3508 35.8504 13.4713 35.8466\n          14.6164C35.8476 15.3717 35.6995 16.1198 35.4107\n          16.8177C35.1219 17.5156 34.6981 18.1496 34.1636\n          18.6833C33.6292 19.217 32.9946 19.6399 32.2963\n          19.9278C31.598 20.2156 30.8497 20.3627 30.0944\n          20.3607V20.3764ZM9.04525 20.219C12.2164 20.219\n          14.6793 17.7875 14.6793\n          14.1443V0H18.0826V22.922H14.7187V20.7541C13.9328\n          21.5664 12.9902 22.2107 11.9481 22.6483C10.906\n          23.0858 9.78596 23.3074 8.65574 23.2997C3.76525\n          23.2997 0 19.7351 0 14.3292V0H3.46623V14.1639C3.46623\n          17.8269 5.82689 20.219 9.04525 20.219Z\"\n                fill=\"white\"\n              />\n              <path d={wordEats} fill=\"#5FB709\" />\n            </svg>\n\n            <div className=\"footer__select\">\n              <svg\n                width=\"20\"\n                height=\"21\"\n                viewBox=\"0 0 20 21\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M10.5251 0.99999L10.5251 0.999987C10.4415\n                0.989444 10.3578 0.978882 10.2729 0.978882C10.2552\n                0.978882 10.2378 0.981238 10.2205 0.983588C10.2054\n                0.985622 10.1904 0.987652 10.1754 0.988148C10.1481\n                0.987651 10.1211 0.985616 10.094 0.98358C10.0628\n                0.981232 10.0316 0.978882 10 0.978882C4.48607\n                0.978882 0 5.45581 0 10.9577C0 16.4603 4.48607\n                20.9365 10 20.9365C10.0317 20.9365 10.0631 20.9342\n                10.0944 20.932L10.0945 20.932C10.1213 20.93 10.1481\n                20.9281 10.175 20.9276C10.1902 20.9281 10.2053 20.93\n                10.2204 20.932C10.2378 20.9343 10.2552 20.9365 10.2729\n                20.9365C10.3623 20.9365 10.4503 20.9253 10.5382\n                20.914C10.561 20.9111 10.5837 20.9082 10.6064\n                20.9055C15.8379 20.5905 20 16.2561 20 10.9577C20\n                5.6593 15.8379 1.32529 10.6064 1.00989C10.5793\n                1.00683 10.5522 1.00341 10.5251 0.99999ZM7.00617\n                2.75938C5.99331 3.92619 5.17045 5.60156 4.71867\n                7.58022C3.31367 7.42804 2.46581 7.25092 2.12402\n                7.16895C3.11692 5.12304 4.86741 3.542 7.00617\n                2.75938ZM1.65096 8.33105C1.38846 9.16001 1.24561\n                10.0424 1.24561 10.9576C1.24708 12.0328 1.44885\n                13.0983 1.84061 14.0999C2.24096 14.0033 3.13311\n                13.8183 4.58132 13.6615C4.42775 12.803 4.33739\n                11.8995 4.33739 10.9576C4.33817 10.2381 4.38913\n                9.5196 4.48989 8.80718C2.80168 8.62008 1.88953\n                8.3952 1.65096 8.33105ZM2.38499 15.2518C2.83785\n                15.1556 3.64928 15.0099 4.84856 14.8848C5.32035\n                16.6268 6.08785 18.099 7.00713 19.1568C5.05128\n                18.4427 3.41303 17.0588 2.38428\n                15.2518H2.38499ZM5.98828 14.7785C6.63507\n                17.2782 8.21292 19.1325 9.28435\n                19.5801V14.6477C8.21292 14.6605 6.91828 14.7097\n                5.98828 14.7785ZM9.2846 13.4052C8.21318 13.4187\n                6.75496 13.4736 5.76068 13.5506C5.62389 12.7273\n                5.58496 11.8563 5.58496 10.9579C5.58496 10.2594\n                5.59853 9.57939 5.68318 8.92257C6.69282 9.0024\n                8.21318 9.05978 9.2846 9.07403V13.4048V13.4052ZM5.854\n                7.69091C6.81186 7.76397 8.21257 7.81814 9.284\n                7.83133V7.83097V2.33621C8.21257 2.81662 6.45222\n                4.91288 5.854 7.69091ZM17.8435 7.10074C17.6482\n                7.16061 16.8567 7.38086 15.2914 7.56582C14.9382\n                5.69123 14.3007 4.09391 13.4692 2.94064C15.3753\n                3.76496 16.9253 5.24895 17.8435\n                7.10038V7.10074ZM14.1368 7.68891C13.55 4.87631 11.7843\n                2.76115 10.7129 2.31745V7.83146C11.7843 7.81827 13.1943\n                7.76375 14.1368 7.68891ZM10.7129 9.07406C11.7843 9.06016\n                13.2861 9.00135 14.2832 8.91867C14.3654 9.57656 14.3861\n                10.2576 14.3861 10.9579C14.3861 11.8574 14.354 12.7299\n                14.2211 13.5542C13.2393 13.4751 11.7843 13.418 10.7129\n                13.4052V9.07406ZM10.7129 14.6477V19.5986V19.599C11.7843\n                19.1849 13.3707 17.3146 14.0065 14.7814C13.0886 14.7108\n                11.7843 14.6605 10.7129 14.6477ZM13.4692 18.9757C14.2185\n                17.9365 14.8153 16.5416 15.1835 14.9033C16.415 15.0448\n                17.1907 15.2094 17.5817 15.3078C16.6401 16.9385 15.1984\n                18.2242 13.4692 18.9757ZM15.4803 8.79411C15.6682 10.4179\n                15.643 12.0593 15.4053 13.6766L15.4056 13.6762C16.9256\n                13.8544 17.7903 14.069 18.1342 14.1691C18.5306 13.1741\n                18.7556 12.0925 18.7556 10.9581C18.7551 9.83681 18.5368\n                8.72626 18.1128 7.68789L18.3138 8.25454C18.2574 8.2745\n                17.4053 8.56353 15.4803 8.79411Z\"\n                  fill=\"white\"\n                />\n              </svg>\n\n              <select className=\"footer__select-inside\">\n                <option>\n              English\n                </option>\n                <option>\n              Ukrainian\n                </option>\n                <option>\n              Russian\n                </option>\n              </select>\n            </div>\n          </div>\n          <div className=\"footer__left-down\">\n            <a\n              href={androidLink}\n              className=\"footer__button apple\"\n            >\n              a\n            </a>\n            <a\n              href={androidLink}\n              className=\"footer__button android\"\n            >\n              a\n            </a>\n          </div>\n        </div>\n        <div className=\"block2\">\n          <ul className=\"block2__ul\">\n            <li>\n              <a href={aboutUberEatsLink} className=\"block2__link\">\n              About Uber Eats\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.ubereats.com/blog/uk-UA/\"\n                className=\"block2__link\"\n              >\n              Read our blog\n              </a>\n            </li>\n            <li>\n              <a\n                href={signUpToDeliverLink}\n                className=\"block2__link\"\n              >\n              Sign up to deliver\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.ubereats.com/restaurant/ru-RU/signup\"\n                className=\"block2__link\"\n              >\n              Add your restaurant\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"block2 block3\">\n          <ul className=\"block2__ul\">\n            <li>\n              <a\n                href={getHelpLink}\n                className=\"block2__link\"\n              >\n              Get Help\n              </a>\n            </li>\n            <li>\n              <a\n                href={readFAQLink}\n                className=\"block2__link\"\n              >\n              Read FAQs\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.ubereats.com/en-UA/cities/#UA\"\n                className=\"block2__link\"\n              >\n              View all cities\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.ubereats.com/en-UA/restaurants-near-me/\"\n                className=\"block2__link\"\n              >\n              Restaurants near me\n              </a>\n            </li>\n            <li>\n              <a\n                href={languageLink}\n                className=\"block2__link\"\n              >\n                <svg\n                  className=\"block2__svg\"\n                  width=\"15\"\n                  height=\"14\"\n                  viewBox=\"0 0 15 14\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M6.85585 9.88519C7.09719\n                9.88495 7.33137 9.80817 7.52044 9.66731C7.70951\n                9.52644 7.8424 9.32974 7.89757 9.10907C7.95274\n                8.88841 7.92696 8.65671 7.82441 8.45152C7.72186\n                8.24634 7.54854 8.07969 7.33255 7.97858C6.75623\n                7.71659 6.21654 7.38879 5.72571 7.00264C6.47292\n                6.09069 7.08716 5.08913 7.55215 4.0245C7.83626\n                4.01516 8.10478 3.9002 8.29864 3.70492C8.4925\n                3.50963 8.59583 3.25 8.58588 2.98316C8.57594\n                2.71632 8.45354 2.46412 8.24562 2.28204C8.03769\n                2.09996 7.76127 2.00291 7.47716\n                2.01225H5.35613V1.00613C5.35613 0.739285\n                5.24327 0.483373 5.04238 0.294688C4.84149 0.106002\n                4.56902 0 4.28491 0C4.0008 0 3.72833 0.106002 3.52744\n                0.294688C3.32654 0.483373 3.21368 0.739285 3.21368\n                1.00613V2.01225H1.07123C0.78712 2.01225 0.514649\n                2.11825 0.313755 2.30694C0.112861 2.49562 0 2.75154\n                0 3.01838C0 3.28522 0.112861 3.54113 0.313755\n                3.72982C0.514649 3.9185 0.78712 4.0245 1.07123\n                4.0245H5.21688C4.94769 4.53634 4.63607 5.0275\n                4.28491 5.49345C4.08137 5.22682 3.8832 4.95014\n                3.70109 4.65333C3.55904 4.42185 3.32489 4.25285\n                3.05017 4.1835C2.77545 4.11416 2.48265 4.15016\n                2.23619 4.28358C1.98972 4.417 1.80979 4.63691\n                1.73596 4.89494C1.66213 5.15297 1.70046 5.42797\n                1.84251 5.65946C2.13394 6.12551 2.45593 6.5741\n                2.80661 7.00264C2.32798 7.38563 1.80089 7.71173\n                1.23727 7.97355C1.02127 8.07466 0.847956 8.24131\n                0.745404 8.44649C0.642853 8.65168 0.617074 8.88338\n                0.672245 9.10404C0.727417 9.32471 0.860306 9.52141\n                1.04938 9.66228C1.23845 9.80314 1.47263 9.87992\n                1.71396 9.88016C1.87963 9.88171 2.04321 9.84546\n                2.19066 9.77451C2.94423 9.42046 3.64776 8.97938\n                4.28491 8.46152C4.92252 8.9826 5.62804 9.42549\n                6.38451 9.77954C6.53035 9.8497 6.692 9.88593\n                6.85585 9.88519Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M14.9132\n                12.5966L14.3775 11.4295L14.3454 11.359L11.6995\n                5.5537C11.6172 5.37221 11.4798 5.21745 11.3046\n                5.10867C11.1294 4.99989 10.924 4.94189 10.7139\n                4.94189C10.5039 4.94189 10.2985 4.99989 10.1233\n                5.10867C9.94804 5.21745 9.81073 5.37221 9.72841\n                5.5537L7.05034 11.3892L6.51473 12.5865C6.40251\n                12.832 6.39871 13.1093 6.50418 13.3574C6.60965\n                13.6056 6.81575 13.8042 7.07712 13.9096C7.3385\n                14.015 7.63376 14.0185 7.89793 13.9195C8.16211\n                13.8204 8.37357 13.6269 8.48579 13.3814L8.75895\n                12.7827H12.6689L12.9421 13.3814C13.0233 13.5642\n                13.1601 13.7204 13.3354 13.8305C13.5107 13.9405\n                13.7167 13.9995 13.9276 14.0001C14.1051 14.0003\n                14.2799 13.9591 14.4362 13.8802C14.5926 13.8013\n                14.7256 13.6871 14.8233 13.5479C14.921 13.4088\n                14.9804 13.249 14.9961 13.0829C15.0118 12.9169\n                14.9833 12.7497 14.9132 12.5966ZM9.67485\n                10.7805L10.7139 8.51171L11.753 10.7856L9.67485\n                10.7805Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              English\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr className=\"footer__hr\" />\n      <div className=\"footer__bottom\">\n        <p className=\"footer__copyright\">\n          © 2019 Uber Technologies Inc.\n        </p>\n        <div className=\"footer__right-bottom\">\n          <ul>\n            <li>\n              <a\n                href=\"https://www.uber.com/legal/ru/\"\n                className=\"block2__link footer__bottom-link\"\n              >\n              Privacy Policy\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.uber.com/legal/ru/\"\n                className=\"block2__link footer__bottom-link\"\n              >\n              Terms of Use\n              </a>\n            </li>\n            <li>\n              <a\n                href={pricingLink}\n                className=\"block2__link footer__bottom-link\"\n              >\n              Pricing\n              </a>\n            </li>\n          </ul>\n          <div className=\"footer__logos\">\n            <svg\n              className=\"footer__bottom-svgs\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M15.1164 0H0.883093C0.395706 0 0 0.394915\n                0 0.883093V15.1164C0 15.6046 0.395706 16 0.883093\n                16H8.54587V9.80386H6.46091V7.38879H8.54587V5.60785C8.54587\n                3.54159 9.80755 2.41586 11.6512 2.41586C12.5351 2.41586\n                13.293 2.48199 13.5141 2.5107V4.67049L12.2353\n                4.67101C11.2328 4.67101 11.0395 5.1476 11.0395\n                5.84654V7.388H13.4311L13.1184\n                9.80281H11.0392V15.9992H15.1161C15.604 15.9992\n                16 15.6032 16 15.1164V0.882566C15.9997 0.394915\n                15.6043 0 15.1164 0Z\"\n                fill=\"white\"\n              />\n            </svg>\n\n            <svg\n              className=\"footer__bottom-svgs\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M19.3333 1.89305C18.6218 2.21429 17.8582 2.43216\n              17.056 2.52942C17.8751 2.02968 18.5022 1.23702\n              18.7993 0.295398C18.031 0.758193 17.1829 1.09424\n              16.2792 1.27641C15.5556 0.489895 14.5262 0 13.3846\n              0C11.1943 0 9.41835 1.80937 9.41835 4.03969C9.41835\n              4.35601 9.45338 4.66496 9.52105 4.96039C6.22534 4.79174\n              3.30294 3.18301 1.34702 0.738495C1.00511 1.33425 0.810611\n              2.02842 0.810611 2.76943C0.810611 4.1714 1.51132 5.40841\n              2.57446 6.13213C1.92449 6.10999 1.31318 5.92782 0.77801\n              5.62502V5.67549C0.77801 7.63256 2.14559 9.2659 3.95895\n              9.63764C3.62671 9.72873 3.27637 9.7792 2.91394\n              9.7792C2.65783 9.7792 2.41016 9.75335 2.16733\n              9.70411C2.6723 11.3104 4.13655 12.4785 5.8714\n              12.5105C4.51469 13.5937 2.804 14.2374 0.945945\n              14.2374C0.625807 14.2374 0.310471 14.2177 0\n              14.182C1.75539 15.3304 3.83938 16 6.07921 16C13.375\n              16 17.3629 9.84321 17.3629 4.50374L17.3496 3.98063C18.1289\n              3.41439 18.803 2.70297 19.3333 1.89305Z\"\n                fill=\"white\"\n              />\n            </svg>\n            <svg\n              className=\"footer__bottom-svgs\"\n              width=\"17\"\n              height=\"16\"\n              viewBox=\"0 0 17 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.9165 0H4.74736C2.31275 0 0.332031 1.98081\n            0.332031 4.41542V11.5846C0.332031 14.0193 2.31275 16\n            4.74736 16H11.9165C14.3513 16 16.332 14.0192 16.332\n            11.5846V4.41542C16.3321 1.98081 14.3513 0 11.9165\n            0ZM14.9125 11.5846C14.9125 13.2365 13.5685 14.5804\n            11.9166 14.5804H4.74736C3.09551 14.5805 1.75163 13.2365\n            1.75163 11.5846V4.41542C1.75163 2.76358 3.09551 1.4196\n            4.74736 1.4196H11.9165C13.5685 1.4196 14.9124 2.76358\n            14.9124 4.41542V11.5846H14.9125Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M8.33178 3.87734C6.05844 3.87734 4.20898 5.72679\n          4.20898 8.00014C4.20898 10.2734 6.05844 12.1227 8.33178\n          12.1227C10.6051 12.1227 12.4546 10.2734 12.4546 8.00014C12.4546\n          5.72679 10.6051 3.87734 8.33178 3.87734ZM8.33178 10.7031C6.8413\n          10.7031 5.62858 9.49053 5.62858 8.00004C5.62858 6.50947 6.8412\n          5.29685 8.33178 5.29685C9.82236 5.29685 11.035 6.50947 11.035\n          8.00004C11.035 9.49053 9.82226 10.7031 8.33178 10.7031Z\"\n                fill=\"white\"\n              />\n              <path\n                d=\"M12.627 2.67383C12.3535 2.67383 12.0848 2.78456\n          11.8916 2.97857C11.6975 3.17163 11.5859 3.44041 11.5859\n          3.71487C11.5859 3.98847 11.6976 4.25715 11.8916 4.45116C12.0847\n          4.64423 12.3535 4.7559 12.627 4.7559C12.9014 4.7559 13.1693\n          4.64423 13.3633 4.45116C13.5573 4.25715 13.668 3.98838\n          13.668 3.71487C13.668 3.44041 13.5573 3.17163 13.3633\n          2.97857C13.1702 2.78456 12.9014 2.67383 12.627 2.67383Z\"\n                fill=\"white\"\n              />\n            </svg>\n\n          </div>\n        </div>\n      </div>\n\n    </footer>\n  );\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport * as store from './components/store/store';\nimport MainSection from './MainSection';\nimport Header from './header';\nimport Footer from './footer';\n\nconst App = ({ getAllDataFromUrl }) => {\n  useEffect(() => {\n    getAllDataFromUrl();\n  }, []);\n\n  return (\n    <HashRouter>\n      <Header />\n      <MainSection />\n      <Footer />\n    </HashRouter>\n  );\n};\n\nconst getDataFromStore = state => ({\n\n});\n\nconst setDataToStore = {\n  getAllDataFromUrl: store.getAllDataFromUrl,\n};\n\nApp.propTypes = {\n  getAllDataFromUrl: PropTypes.func.isRequired,\n};\n\nexport default connect(getDataFromStore, setDataToStore)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './components/store/store';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}